name: CDKTF Deploy

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Action type to run'
        required: true
        options:
          - deploy
          - destroy
      stage:
        type: choice
        description: 'Name of stage to be created/destroyed'
        required: true
        options:
          - core
          - dev
          - test
          - prop

permissions:
  id-token: write
  contents: read

jobs:
  manage_stack:
    name: ${{ github.event.inputs.action }} core infra stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10."

#      - name: Cache Node modules
#        uses: actions/cache@v4
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-modules-
#
#      - name: Cache Terraform Providers & Modules
#        uses: actions/cache@v4
#        with:
#          path: cdktf.out/stacks/**/.terraform
#          key: ${{ runner.os }}-terraform-plugins-${{ hashFiles('**/*.tf') }}
#          restore-keys: |
#            ${{ runner.os }}-terraform-plugins-

      - name: Install Dependencies
        run: npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        id: aws-login
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          output-credentials: true

      - name: ${{ github.event.inputs.action }} core infra stack
        run: npm run ${{ github.event.inputs.action }} ${{ github.event.inputs.stage }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          STAGE: ${{ github.event.inputs.stage }}
          ROOT_DOMAIN: ${{ secrets.ROOT_DOMAIN }}
          S3_BACKEND_BUCKET: ${{ secrets.S3_BACKEND_BUCKET }}
          S3_BACKEND_LOCK_TABLE: ${{ secrets.S3_BACKEND_LOCK_TABLE }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.SERVICE_ACCOUNT_GITHUB_TOKEN }}
          ACME_EMAIL: ${{ secrets.ACME_EMAIL }}
          ACME_SERVER: ${{ secrets.ACME_SERVER }}
